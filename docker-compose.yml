services:
  postgres:
    image: postgres:15
    container_name: user_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: tasker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d tasker" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend

  user-service:
    build:
      context: ./user-service
    container_name: user_service
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/tasker
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
      SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT: 30000
      JWT_SECRET: Gk3jDnYv89xAZu7Tsd49PqLeN19cnqmWVmQZkVvX52kXtK3bC4m8PLhEr9sJQaBd
    networks:
      - backend

  task-service:
    build:
      context: ./task-service
    container_name: task_service
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/task_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      JWT_SECRET: Gk3jDnYv89xAZu7Tsd49PqLeN19cnqmWVmQZkVvX52kXtK3bC4m8PLhEr9sJQaBd
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
